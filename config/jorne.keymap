/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
#include <dt-bindings/led/led.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>


#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3


&spi1 {
	compatible = "nordic,nrf-spim";
	/* Cannot be used together with i2c0. */
	status = "okay";
	mosi-pin = <6>;
	// Unused pins, needed for SPI definition, but not used by the ws2812 driver itself.
	sck-pin = <5>;
	miso-pin = <7>;

	led_strip: ws2812@0 {
		compatible = "worldsemi,ws2812-spi";
		label = "WS2812";

		/* SPI */
		reg = <0>; /* ignored, but necessary for SPI bindings */
		spi-max-frequency = <4000000>;

		/* WS2812 */
		chain-length = <6>; /* There are per-key RGB, but the first 6 are underglow */
		spi-one-frame = <0x70>;
		spi-zero-frame = <0x40>;
		color-mapping = <LED_COLOR_ID_GREEN LED_COLOR_ID_RED LED_COLOR_ID_BLUE>;
	};
};

/ {
    chosen {
		zmk,underglow = &led_strip;
	};

        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  GUI | ESC |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC | GUI/] |
//        | TAB |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  | RET  |
//        |LSHFT|  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | DEL  |
//                           | ALT | SPC/RSE |SPACE/LCTRL |   | SPACE/LWR | SPC/RSE | ADJ |
                        bindings = <
   &kp LWIN &kp ESC   &kp Q &kp W &kp E &kp R &kp T &kp Y         &kp U  &kp I     &kp O   &kp P    &kp BSPC &mt RWIN RBKT
            &kp TAB   &kp A &kp S &kp D &kp F &kp G &kp H         &kp J  &kp K     &kp L   &kp SEMI &kp RET
            &kp LSHFT &kp Z &kp X &kp C &kp V &kp B &kp N         &kp M  &kp COMMA &kp DOT &kp FSLH &kp DEL
                   &kp LALT &lt RSE SPACE &mt LCTRL SPACE         &lt LWR SPACE &lt RSE SPACE &lt ADJ SPACE
                        >;
                };
                lower_layer {
// -----------------------------------------------------------------------------------------
// |     |  ~  |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC|     |
//       |     |     |     |     |     |     |   |     |  -  |  +  |     |     | RET |
//       |LSHFT|     |     |     |     |     |   |     |     |     |     |     | ADJ |
//                   |     |SPACE|     |     |   |     |     |
                        bindings = <
   &none  &kp GRAVE    &kp N1   &kp N2  &kp N3    &kp N4     &kp N5       &kp N6  &kp N7      &kp N8     &kp N9   &kp N0   &kp BSPC &none
          &none        &none    &none   &none     &none      &none        &none   &kp MINUS   &kp EQUAL  &none    &none    &kp RET
          &kp LSHFT    &none    &none   &none     &none      &none        &none   &none       &none      &none    &none    &lt ADJ SPACE
                                        &none     &kp SPACE  &none        &none   &none       &none
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// |     |       |     |     |  UP |     | BSPC|   |     |     |     |VOLD |VOLU | MUT |     |
//       | CAPS  |     | LEFT|DOWN |RIGHT| RET |   |     |     |     |BRID |BRID |     |
//       | ADJ   |     |     |     |     | DEL |   |     |     |     |     |     |     |
//                           |     |     |     |   |     |     |     |
                        bindings = <
   &none  &none         &none    &none     &kp UP    &none      &kp BSPC        &none   &none   &none   &kp C_VOL_DN   &kp C_VOL_UP   &kp C_MUTE   &none
          &kp CAPS      &none    &kp LEFT  &kp DOWN  &kp RIGHT  &kp RET         &none   &none   &none   &kp C_BRI_DN   &kp C_BRI_UP   &none
          &lt ADJ SPACE &none    &none     &none     &none      &kp DEL         &none   &none   &none   &none          &none          &none
                                          &none     &none      &none           &none   &none   &none
                        >;
                };
                adjust_layer {
// -----------------------------------------------------------------------------------------
// |     | RST  | BLDR|     |     |BTCLR|     |   |     |BTCLR|     |     | BLDR | RST |     |
//       | BTCLR| BT0 | BT1 | BT2 | BT3 | BT4 |   | BT4 | BT3 | BT2 | BT1 | BT0 | BTCLR|
//       |      |     |     |     |     |     |   |     |     |     |     |     |      |
//                          |     |     |     |   |     |     |     |
                        bindings = <
   &none  &reset       &bootloader      &none          &none         &bt BT_CLR      &none            &none          &bt BT_CLR     &none          &none          &bootloader &reset    &none
          &bt BT_CLR   &bt BT_SEL 0     &bt BT_SEL 1   &bt BT_SEL 2  &bt BT_SEL 3    &bt BT_SEL 4     &bt BT_SEL 4   &bt BT_SEL 3   &bt BT_SEL 2   &bt BT_SEL 1   &bt BT_SEL 0    &bt BT_CLR
          &none        &none            &none          &none         &none           &none            &none          &none          &none          &none          &none           &none
                                                       &none         &none           &none            &none          &none          &none
                        >;
                };
        };
};
